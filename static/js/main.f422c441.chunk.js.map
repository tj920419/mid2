{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","InputtingNewList","InputNewList","List","StateList","this","ListComponent","AddAListArea","CardComponent","EditListName","e","console","log","target","parentNode","v","length","id","Id","NameEditing","setState","InputtingNewListName","w","InputNewName","value","SaveNewListName","x","Name","CancelListNameEditing","y","RemoveList","z","splice","ClickAddACardButton","a","Editing","InputNewCard","b","ClickAddCardButton","c","NewCard","Card","push","CancelCardInput","d","i","j","CardTemplate","className","ListComponentViewingTemplate","onClick","ListComponentEditingTemplate","onChange","placeholder","AddAListTemplate","AddaListInputTemplate","NewList","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","window","addEventListener","ReactDOM","render","document","getElementById"],"mappings":"6NAuTeA,G,wDAlTb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,kBAAkB,EAClBC,aAAc,GACdC,KAAM,IALS,E,qDAiMjB,IAxLQ,IAAD,OACHC,EAAYC,KAAKL,MAAMG,KACvBG,EAAgB,GAChBC,EAAe,GACfC,EAAgB,GA6ChBC,EAAe,SAACC,GAClBC,QAAQC,IAAI,gBACZD,QAAQC,IAAIF,EAAEG,OAAOC,YACrB,IAAK,IAAIC,EAAI,EAAGA,EAAIX,EAAUY,OAAQD,GAAK,EACzCJ,QAAQC,IAAIF,EAAEG,OAAOC,WAAWG,IAChCN,QAAQC,IAAIR,EAAUW,GAAGG,IAErBR,EAAEG,OAAOC,WAAWG,KAAOF,EAAIX,EAAUW,GAAGG,KAC9Cd,EAAUW,GAAGI,aAAc,EAC3B,EAAKC,SAAS,CAAEjB,KAAMC,IACtBO,QAAQC,IAAI,EAAKZ,SAKnBqB,EAAuB,SAACX,GAC1BC,QAAQC,IAAI,wBACZ,IAAK,IAAIU,EAAI,EAAGA,EAAIlB,EAAUY,OAAQM,GAAK,EACzCX,QAAQC,IAAIF,EAAEG,OAAOC,WAAWG,IAChCN,QAAQC,IAAIR,EAAUkB,GAAGJ,IAErBR,EAAEG,OAAOC,WAAWG,KAAOK,EAAIlB,EAAUkB,GAAGJ,KAC9Cd,EAAUkB,GAAGC,aAAeb,EAAEG,OAAOW,MACrC,EAAKJ,SAAS,CAAEjB,KAAMC,IACtBO,QAAQC,IAAI,EAAKZ,SAKnByB,EAAkB,SAACf,GACrBC,QAAQC,IAAI,mBACZ,IAAK,IAAIc,EAAI,EAAGA,EAAItB,EAAUY,OAAQU,GAAK,EACzCf,QAAQC,IAAIF,EAAEG,OAAOC,WAAWG,IAChCN,QAAQC,IAAIR,EAAUsB,GAAGR,IAGvBR,EAAEG,OAAOC,WAAWG,KAAOS,EAAItB,EAAUsB,GAAGR,IACd,KAA9Bd,EAAUsB,GAAGH,eAEbnB,EAAUsB,GAAGC,KAAOvB,EAAUsB,GAAGH,aACjCnB,EAAUsB,GAAGR,GAAKd,EAAUsB,GAAGH,aAC/B,EAAKH,SAAS,CAAEjB,KAAMC,IACtBO,QAAQC,IAAI,EAAKZ,SAKnB4B,EAAwB,SAAClB,GAC3BC,QAAQC,IAAI,yBAEZ,IAAK,IAAIiB,EAAI,EAAGA,EAAIzB,EAAUY,OAAQa,GAAK,EACzClB,QAAQC,IAAIF,EAAEG,OAAOC,WAAWG,IAChCN,QAAQC,IAAIR,EAAUyB,GAAGX,IAErBR,EAAEG,OAAOC,WAAWG,KAAOY,EAAIzB,EAAUyB,GAAGX,KAC9Cd,EAAUyB,GAAGV,aAAc,EAC3B,EAAKC,SAAS,CAAEjB,KAAMC,IACtBO,QAAQC,IAAI,EAAKZ,SAKnB8B,EAAa,SAACpB,GAChBC,QAAQC,IAAI,cACZD,QAAQC,IAAIF,EAAEG,OAAOC,YACrB,IAAK,IAAIiB,EAAI,EAAGA,EAAI3B,EAAUY,OAAQe,GAAK,EACzCpB,QAAQC,IAAIF,EAAEG,OAAOC,WAAWG,IAChCN,QAAQC,IAAIR,EAAU2B,GAAGb,IAErBR,EAAEG,OAAOC,WAAWG,KAAOc,EAAI3B,EAAU2B,GAAGb,KAC9Cd,EAAU4B,OAAOD,EAAG,GACpB,EAAKX,SAAS,CAAEjB,KAAMC,IACtBO,QAAQC,IAAI,EAAKZ,SAMnBiC,EAAsB,SAACvB,GACzBC,QAAQC,IAAI,uBACZ,IAAK,IAAIsB,EAAI,EAAGA,EAAI9B,EAAUY,OAAQkB,GAAK,EACrCxB,EAAEG,OAAOC,WAAWG,KAAOiB,EAAI9B,EAAU8B,GAAGhB,KAC9Cd,EAAU8B,GAAGC,SAAU,EACvB,EAAKf,SAAS,CAAEjB,KAAMC,KAG1BO,QAAQC,IAAI,EAAKZ,QAGfoC,EAAe,SAAC1B,GAClB,IAAK,IAAI2B,EAAI,EAAGA,EAAIjC,EAAUY,OAAQqB,GAAK,EACzC1B,QAAQC,IAAIF,EAAEG,OAAOC,WAAWG,IAChCN,QAAQC,IAAIR,EAAUiC,GAAGnB,IAErBR,EAAEG,OAAOC,WAAWG,KAAOoB,EAAIjC,EAAUiC,GAAGnB,KAC9Cd,EAAUiC,GAAGD,aAAe1B,EAAEG,OAAOW,MACrC,EAAKJ,SAAS,CAAEjB,KAAMC,IACtBO,QAAQC,IAAI,EAAKZ,QAGrBW,QAAQC,IAAI,EAAKZ,QAGfsC,EAAqB,SAAC5B,GACxBC,QAAQC,IAAI,sBACZ,IAAK,IAAI2B,EAAI,EAAGA,EAAInC,EAAUY,OAAQuB,GAAK,EACzC,GACE7B,EAAEG,OAAOC,WAAWG,KAAOsB,EAAInC,EAAUmC,GAAGrB,IACd,KAA9Bd,EAAUmC,GAAGH,aACb,CACA,IAAII,EAAU,CACZtB,GAAId,EAAUmC,GAAGH,aACjBT,KAAMvB,EAAUmC,GAAGH,cAGrBhC,EAAUmC,GAAGE,KAAKC,KAAKF,GACvB,EAAKpB,SAAS,CAAEjB,KAAMC,IAG1BO,QAAQC,IAAI,EAAKZ,QAGf2C,EAAkB,SAACjC,GACrBC,QAAQC,IAAI,mBACZ,IAAK,IAAIgC,EAAI,EAAGA,EAAIxC,EAAUY,OAAQ4B,GAAK,EACrClC,EAAEG,OAAOC,WAAWG,KAAO2B,EAAIxC,EAAUwC,GAAG1B,KAC9Cd,EAAUwC,GAAGT,SAAU,EACvB,EAAKf,SAAS,CAAEjB,KAAMC,KAG1BO,QAAQC,IAAI,EAAKZ,QAKV6C,EAAI,EAAGA,EAAIzC,EAAUY,OAAQ6B,GAAK,EAAG,CAC5C,IAAK,IAAIC,EAAI,EAAGA,EAAI1C,EAAUyC,GAAGJ,KAAKzB,OAAQ8B,GAAK,EAAG,CACpD,IAAIC,EACF,8BACE,qBAAKC,UAAU,YAAf,SAA4B5C,EAAUyC,GAAGJ,KAAKK,GAAGnB,SAIrDnB,EAAckC,KAAKK,GACnBpC,QAAQC,IAAImC,GAEd,IAA6B,IAAzB3C,EAAUyC,GAAGV,SACf,IAAiC,IAA7B/B,EAAUyC,GAAG1B,YAAuB,CACtC,IAAI8B,EACF,sBAAKD,UAAU,gBAAgB/B,GAAI4B,EAAIzC,EAAUyC,GAAG3B,GAApD,UACE,qBAAK8B,UAAU,YAAf,SAA4B5C,EAAUyC,GAAGlB,OACxCnB,EACD,wBAAQwC,UAAU,eAAeE,QAASzC,EAA1C,4BAGA,wBAAQuC,UAAU,aAAaE,QAASpB,EAAxC,yBAGA,wBACEkB,UAAU,sBACVE,QAASjB,EAFX,6BAQJ3B,EAAcoC,KAAKO,GACnBzC,EAAgB,QACX,IAAiC,IAA7BJ,EAAUyC,GAAG1B,YAAsB,CAC5C,IAAIgC,EACF,sBAAKH,UAAU,gBAAgB/B,GAAI4B,EAAIzC,EAAUyC,GAAG3B,GAApD,UACE,qBAAK8B,UAAU,YAAf,SAA4B5C,EAAUyC,GAAGlB,OACxCnB,EACD,uBACEwC,UAAU,gBACVI,SAAU/B,EACVgC,YAAY,yBAEd,wBAAQH,QAASzB,EAAjB,gCACA,wBAAQyB,QAAStB,EAAjB,oCAKJtB,EAAcoC,KAAKS,GACnB3C,EAAgB,SAEb,IAA6B,IAAzBJ,EAAUyC,GAAGV,QAAkB,CACxC,IAAIgB,EACF,sBAAKH,UAAU,gBAAgB/B,GAAI4B,EAAIzC,EAAUyC,GAAG3B,GAApD,UACE,qBAAK8B,UAAU,YAAf,SAA4B5C,EAAUyC,GAAGlB,OACxCnB,EACD,uBACEwC,UAAU,gBACVI,SAAUhB,EACViB,YAAY,oBAEd,wBAAQL,UAAU,qBAAqBE,QAASZ,EAAhD,sBAGA,wBAAQU,UAAU,oBAAoBE,QAASP,EAA/C,uBAKJrC,EAAcoC,KAAKS,GACnB3C,EAAgB,IAKpB,IAAoC,IAAhCH,KAAKL,MAAMC,iBAA4B,CACzC,IAAIqD,EACF,8BACE,wBAAQN,UAAU,iBAAiBE,QAhQf,WACxBvC,QAAQC,IAAI,uBACZ,EAAKQ,SAAS,CAAEnB,kBAAkB,IAClCU,QAAQC,IAAI,EAAKZ,QA6Pb,4BAKJO,EAAamC,KAAKY,QACb,IAAoC,IAAhCjD,KAAKL,MAAMC,iBAA2B,CAC/C,IAAIsD,EACF,gCACE,uBACEP,UAAU,mBACVI,SApQW,SAAC1C,GAClBC,QAAQC,IAAIF,EAAEG,OAAOW,OACrB,EAAKJ,SAAS,CAAElB,aAAcQ,EAAEG,OAAOW,QACvCb,QAAQC,IAAI,EAAKZ,QAkQXqD,YAAY,oBAEd,wBAAQL,UAAU,gBAAgBE,QAjQf,WAEvB,GADAvC,QAAQC,IAAI,sBACoB,KAA5B,EAAKZ,MAAME,aACbS,QAAQC,IAAI,+BACP,CACLD,QAAQC,IAAI,EAAKZ,MAAME,cACvB,IAAIsD,EAAU,CACZtC,GAAI,EAAKlB,MAAME,aACfyB,KAAM,EAAK3B,MAAME,aACjBiC,SAAS,EACTM,KAAM,GACNL,aAAc,GACdjB,aAAa,EACbI,aAAc,IAGhBnB,EAAUsC,KAAKc,GACf,EAAKpC,SAAS,CAAElB,aAAc,GAAIC,KAAMC,IACxCO,QAAQC,IAAI,EAAKZ,SA+Of,sBAGA,wBAAQgD,UAAU,oBAAoBE,QA9OtB,WACpBvC,QAAQC,IAAI,mBACZ,EAAKQ,SAAS,CAAEnB,kBAAkB,IAClCU,QAAQC,IAAI,EAAKZ,QA2Ob,uBAKJO,EAAamC,KAAKa,GAGpB,OACE,sBAAKP,UAAU,MAAf,UACE,qBAAKA,UAAU,qBAAf,SAAqCzC,IACrC,qBAAKyC,UAAU,qBAAf,SAAqC1C,W,GA7S3BmD,IAAMC,YCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,OAAOC,iBAAiB,QAAQ,WAC9BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,YAYnDd,M","file":"static/js/main.f422c441.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport ReactDOM from 'react-dom';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      InputtingNewList: false,\n      InputNewList: '',\n      List: [],\n    };\n  }\n\n  render() {\n    let StateList = this.state.List;\n    let ListComponent = [];\n    let AddAListArea = [];\n    let CardComponent = [];\n\n    /*初始按鈕*/\n    let ClickAddAListButton = () => {\n      console.log('ClickAddAListButton');\n      this.setState({ InputtingNewList: true });\n      console.log(this.state);\n    };\n\n    /*新增清單*/\n    let InputNewList = (e) => {\n      console.log(e.target.value);\n      this.setState({ InputNewList: e.target.value });\n      console.log(this.state);\n    };\n\n    let ClickAddListButton = () => {\n      console.log('ClickAddListButton');\n      if (this.state.InputNewList === '') {\n        console.log('Not yet input anything!');\n      } else {\n        console.log(this.state.InputNewList);\n        let NewList = {\n          Id: this.state.InputNewList,\n          Name: this.state.InputNewList,\n          Editing: false,\n          Card: [],\n          InputNewCard: '',\n          NameEditing: false,\n          InputNewName: '',\n        };\n\n        StateList.push(NewList);\n        this.setState({ InputNewList: '', List: StateList });\n        console.log(this.state);\n      }\n    };\n\n    let CancelListInput = () => {\n      console.log('CancelListInput');\n      this.setState({ InputtingNewList: false });\n      console.log(this.state);\n    };\n\n    /*調整清單*/\n    let EditListName = (e) => {\n      console.log('EditListName');\n      console.log(e.target.parentNode);\n      for (let v = 0; v < StateList.length; v += 1) {\n        console.log(e.target.parentNode.id);\n        console.log(StateList[v].Id);\n\n        if (e.target.parentNode.id === v + StateList[v].Id) {\n          StateList[v].NameEditing = true;\n          this.setState({ List: StateList });\n          console.log(this.state);\n        }\n      }\n    };\n\n    let InputtingNewListName = (e) => {\n      console.log('InputtingNewListName');\n      for (let w = 0; w < StateList.length; w += 1) {\n        console.log(e.target.parentNode.id);\n        console.log(StateList[w].Id);\n\n        if (e.target.parentNode.id === w + StateList[w].Id) {\n          StateList[w].InputNewName = e.target.value;\n          this.setState({ List: StateList });\n          console.log(this.state);\n        }\n      }\n    };\n\n    let SaveNewListName = (e) => {\n      console.log('SaveNewListName');\n      for (let x = 0; x < StateList.length; x += 1) {\n        console.log(e.target.parentNode.id);\n        console.log(StateList[x].Id);\n\n        if (\n          e.target.parentNode.id === x + StateList[x].Id &&\n          StateList[x].InputNewName !== ''\n        ) {\n          StateList[x].Name = StateList[x].InputNewName;\n          StateList[x].Id = StateList[x].InputNewName;\n          this.setState({ List: StateList });\n          console.log(this.state);\n        }\n      }\n    };\n\n    let CancelListNameEditing = (e) => {\n      console.log('CancelListNameEditing');\n\n      for (let y = 0; y < StateList.length; y += 1) {\n        console.log(e.target.parentNode.id);\n        console.log(StateList[y].Id);\n\n        if (e.target.parentNode.id === y + StateList[y].Id) {\n          StateList[y].NameEditing = false;\n          this.setState({ List: StateList });\n          console.log(this.state);\n        }\n      }\n    };\n\n    let RemoveList = (e) => {\n      console.log('RemoveList');\n      console.log(e.target.parentNode);\n      for (let z = 0; z < StateList.length; z += 1) {\n        console.log(e.target.parentNode.id);\n        console.log(StateList[z].Id);\n\n        if (e.target.parentNode.id === z + StateList[z].Id) {\n          StateList.splice(z, 1);\n          this.setState({ List: StateList });\n          console.log(this.state);\n        }\n      }\n    };\n\n    //增加卡片\n    let ClickAddACardButton = (e) => {\n      console.log('ClickAddACardButton');\n      for (let a = 0; a < StateList.length; a += 1) {\n        if (e.target.parentNode.id === a + StateList[a].Id) {\n          StateList[a].Editing = true;\n          this.setState({ List: StateList });\n        }\n      }\n      console.log(this.state);\n    };\n\n    let InputNewCard = (e) => {\n      for (let b = 0; b < StateList.length; b += 1) {\n        console.log(e.target.parentNode.id);\n        console.log(StateList[b].Id);\n\n        if (e.target.parentNode.id === b + StateList[b].Id) {\n          StateList[b].InputNewCard = e.target.value;\n          this.setState({ List: StateList });\n          console.log(this.state);\n        }\n      }\n      console.log(this.state);\n    };\n\n    let ClickAddCardButton = (e) => {\n      console.log('ClickAddCardButton');\n      for (let c = 0; c < StateList.length; c += 1) {\n        if (\n          e.target.parentNode.id === c + StateList[c].Id &&\n          StateList[c].InputNewCard !== ''\n        ) {\n          let NewCard = {\n            Id: StateList[c].InputNewCard,\n            Name: StateList[c].InputNewCard,\n          };\n\n          StateList[c].Card.push(NewCard);\n          this.setState({ List: StateList });\n        }\n      }\n      console.log(this.state);\n    };\n\n    let CancelCardInput = (e) => {\n      console.log('CancelCardInput');\n      for (let d = 0; d < StateList.length; d += 1) {\n        if (e.target.parentNode.id === d + StateList[d].Id) {\n          StateList[d].Editing = false;\n          this.setState({ List: StateList });\n        }\n      }\n      console.log(this.state);\n    };\n\n    //UI rendering\n    /*New List + New Card*/\n    for (let i = 0; i < StateList.length; i += 1) {\n      for (let j = 0; j < StateList[i].Card.length; j += 1) {\n        let CardTemplate = (\n          <div>\n            <div className='CardTitle'>{StateList[i].Card[j].Name}</div>\n            {/* <div>{'第' + i + '列' + '第' + j + '行'}</div> */}\n          </div>\n        );\n        CardComponent.push(CardTemplate);\n        console.log(CardTemplate);\n      }\n      if (StateList[i].Editing === false) {\n        if (StateList[i].NameEditing === false) {\n          let ListComponentViewingTemplate = (\n            <div className='ListComponent' id={i + StateList[i].Id}>\n              <div className='ListTitle'>{StateList[i].Name}</div>\n              {CardComponent}\n              <button className='EditListName' onClick={EditListName}>\n                Edit List Name\n              </button>\n              <button className='RemoveList' onClick={RemoveList}>\n                Remove List\n              </button>\n              <button\n                className='ClickAddACardButton'\n                onClick={ClickAddACardButton}\n              >\n                + Add a card\n              </button>\n            </div>\n          );\n          ListComponent.push(ListComponentViewingTemplate);\n          CardComponent = [];\n        } else if (StateList[i].NameEditing === true) {\n          let ListComponentEditingTemplate = (\n            <div className='ListComponent' id={i + StateList[i].Id}>\n              <div className='ListTitle'>{StateList[i].Name}</div>\n              {CardComponent}\n              <input\n                className='ListInputArea'\n                onChange={InputtingNewListName}\n                placeholder='Input new list name!'\n              ></input>\n              <button onClick={SaveNewListName}>Save New List Name</button>\n              <button onClick={CancelListNameEditing}>\n                Cancel Name Editing\n              </button>\n            </div>\n          );\n          ListComponent.push(ListComponentEditingTemplate);\n          CardComponent = [];\n        }\n      } else if (StateList[i].Editing === true) {\n        let ListComponentEditingTemplate = (\n          <div className='ListComponent' id={i + StateList[i].Id}>\n            <div className='ListTitle'>{StateList[i].Name}</div>\n            {CardComponent}\n            <input\n              className='ListInputArea'\n              onChange={InputNewCard}\n              placeholder='Input new card!'\n            ></input>\n            <button className='ClickAddCardButton' onClick={ClickAddCardButton}>\n              Add Card\n            </button>\n            <button className='CancelInputButton' onClick={CancelCardInput}>\n              Cancel\n            </button>\n          </div>\n        );\n        ListComponent.push(ListComponentEditingTemplate);\n        CardComponent = [];\n      }\n    }\n\n    /*Initial*/\n    if (this.state.InputtingNewList === false) {\n      let AddAListTemplate = (\n        <div>\n          <button className='AddAListButton' onClick={ClickAddAListButton}>\n            + Add a list\n          </button>\n        </div>\n      );\n      AddAListArea.push(AddAListTemplate);\n    } else if (this.state.InputtingNewList === true) {\n      let AddaListInputTemplate = (\n        <div>\n          <input\n            className='NewListInputArea'\n            onChange={InputNewList}\n            placeholder='Input new list!'\n          ></input>\n          <button className='AddListButton' onClick={ClickAddListButton}>\n            Add List\n          </button>\n          <button className='CancelInputButton' onClick={CancelListInput}>\n            Cancel\n          </button>\n        </div>\n      );\n      AddAListArea.push(AddaListInputTemplate);\n    }\n\n    return (\n      <div className='All'>\n        <div className='AddListButtonGroup'>{AddAListArea}</div>\n        <div className='ListComponentGroup'>{ListComponent}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nwindow.addEventListener('load', () => {\n  ReactDOM.render(<App />, document.getElementById('root'));\n});\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}